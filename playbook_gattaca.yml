---
- hosts: all
  #remote_user: DO NOT specify a user here. Specify login name in your ~/.ssh/config instead.
  #become_method: su
  #become_user: umcg-envsync
  pre_tasks:
    - name: Verify Ansible version meets requirements.
      assert:
        that: "ansible_version.full | version_compare('2.4', '>=')"
        msg: 'You must update Ansible to at least 2.4.x to use this playbook.'
  roles:
  - role: easybuild-install
  tasks:
  - name: Create main folder structure for software and reference data.
    file: dest="{{item}}" state='directory' mode="{{ MODE_2775_HARD }}"
    with_items:
      - "{{ easybuild_software_dir }}/easyconfigs"
      - "{{ easybuild_sources_dir }}/e/easyconfigs"
      - "{{ pb_ebconfigs_prefix }}"
      - "{{ HPC_ENV_PREFIX }}/data"
  - name: Create main folder structure for data analysis group.
    file: dest="{{item}}" state='directory' mode="{{ MODE_2770_HARD }}"
    with_items:
      - "{{ pb_base }}/generatedscripts"
      - "{{ pb_base }}/Samplesheets"
      - "{{ pb_base }}/projects"
      - "{{ pb_base }}/logs"
      - "{{ pb_base }}/tmp"
  - name: Synchronize apps/data.
    synchronize:
      src: "{{ pb_remote_env_cache_dir_public }}/data/{{ item.src }}"
      dest: "{{ HPC_ENV_PREFIX }}/data/"
      mode: 'pull'
      use_ssh_args: 'yes'
      rsync_opts:
        # --omit-dir-times  Is required to prevent "sync error: some files/attrs were not transferred"
        #                   for file systems like NFS mounts that cannot handle setting dir times properly.
        # --omit-link-times Is required to prevent "sync error: some files/attrs were not transferred"
        #                   for file systems like NFS mounts that cannot handle setting dir times properly.
        #                   Requires rsync >= 3.1.2 (default on Enterprise Linux >= 7.x).
        # --chmod           Is required to prevent errors when the perms on the source are not what is required/expected on the destination.
        #                   Fixing perms on the source would be good, but that may be out of our control.
        #                   In that case --chmod ensures we get what we want on the destination.
        # --force           Is required when symlinks have changed into dirs/files or vice versa.
        #                   In that case the wrong outdated stuff has to be deleted on the destination first before the new stuff can be created.
        #                   Deleting the outdated stuff may fail without --force.
        - "--omit-dir-times"
        - "--omit-link-times"
        - "--chmod={{ MODE_D2775_F0664 }}"
        - "--force"
    delegate_to: "{{ inventory_hostname }}"
    with_items:
      - src: "Prepkits"
  - name: Synchronize publicly available sources, which cannot be downloaded automagically by EB for technical reasons.
    # This is usually the case for downloads from FTP URLs, which may be blocked by firewalls due to the insecure nature of FTP.
    synchronize:
      src: "{{ pb_remote_env_cache_dir_public }}/sources/./{{ item.src }}"
      dest: "{{ easybuild_sources_dir }}/"
      mode: 'pull'
      use_ssh_args: 'yes'
      rsync_opts:
        # --relative        In combination with a "source_server:some/path/not/created/on/destination/./path/created/on/destination/some_file" (dot dir)
        #                   recreates a partial dir structure on the destination relative to the /./ dir, when it does not already exist.
        #                   Without this combination of --relative and dot dir rsync will error when the path does not exist on the destination.
        - '--relative'
        - '--omit-dir-times'               # See comments above for why.
        - "--omit-link-times"              # See comments above for why.
        - "--chmod={{ MODE_D2775_F0664 }}" # See comments above for why.
        - '--force'                        # See comments above for why.
    delegate_to: "{{ inventory_hostname }}"
    with_items:
      - src:  'f/flex/flex-2.5.39.tar.gz'
        dest: 'f/flex/'
      - src:  'g/GCC/gmp-6.0.0a.tar.bz2'
        dest: 'g/GCC/'
      - src:  'g/GCC/mpc-1.0.2.tar.gz'
        dest: 'g/GCC/'
      - src:  'g/GCC/gcc-4.9.3.tar.bz2'
        dest: 'g/GCC/'
      - src:  'g/GCC/mpfr-3.1.2.tar.gz'
        dest: 'g/GCC/'
      - src:  'h/hwloc/hwloc-1.11.0.tar.gz'
        dest: 'h/hwloc/'
      - src:  'n/NASM/nasm-2.11.08.tar.bz2'
        dest: 'n/NASM/'
      - src:  'n/numactl/numactl-2.0.10.tar.gz'
        dest: 'n/numactl/'
      - src:  'o/OpenMPI/openmpi-1.8.8.tar.gz'
        dest: 'o/OpenMPI/'
      - src:  'z/zlib/zlib-1.2.8.tar.gz'
        dest: 'z/zlib/'
      - src:  'i/io_lib/io_lib-1.14.6.tar.gz'
        dest: 'i/io_lib/'
      - src:  'e/expat/expat-2.1.0.tar.gz'
        dest: 'e/expat/'
      - src:  'l/libpng/libpng-1.6.21.tar.gz'
        dest: 'l/libpng/'
  - name: Synchronize sources, which cannot be downloaded automagically by EasyBuild for legal reasons.
    # NOTE: This is more or less the same as the download above, but for legal reasons we cannot cache these on a publicly accessible server.
    #       You will have to download these yourself to a system under your control, so the playbook can copy them to your target systems.
    synchronize:
      src: "{{ pb_remote_env_cache_dir_private }}/sources/./{{ item.src }}"
      dest: "{{ easybuild_sources_dir }}/"
      mode: 'pull'
      use_ssh_args: 'yes'
      rsync_opts:
        - '--relative'                     # See comments above for why.
        - '--omit-dir-times'               # See comments above for why.
        - "--omit-link-times"              # See comments above for why.
        - "--chmod={{ MODE_D2775_F0664 }}" # See comments above for why.
        - '--force'                        # See comments above for why.
    delegate_to: "{{ inventory_hostname }}"
    with_items:
      - src:  'g/GATK/GenomeAnalysisTK-3.7.tar.bz2'
        dest: 'g/GATK/'
      - src:  'j/Java/jdk-8u45-linux-x64.tar.gz'
        dest: 'j/Java/'
      - src:  'j/Java/jdk-8u74-linux-x64.tar.gz'
        dest: 'j/Java/'
      - src:  'j/Java/jdk-7u80-linux-x64.tar.gz'
        dest: 'j/Java/'
  - name: Get EasyConfigs.
    get_url: url="{{ item.url }}" dest="{{ item.dest }}" checksum="{{ item.checksum }}" mode="{{ MODE_0664_HARD }}"
    with_items:
      - url: "https://github.com/molgenis/easybuild-easyconfigs/archive/{{ pb_ebconfigs_version }}/easybuild-easyconfigs-{{ pb_ebconfigs_version }}.tar.gz"
        dest: "{{ easybuild_sources_dir }}/e/easyconfigs/"
        checksum: "{{ pb_ebconfigs_checksum }}"
  - name: Extract EasyConfigs.
    unarchive: src="{{ item.src }}" dest="{{ item.dest }}" remote_src=yes mode="{{ MODE__775_SOFT }}"
    with_items:
      - src:  "{{ easybuild_sources_dir }}/e/easyconfigs/easybuild-easyconfigs-{{ pb_ebconfigs_version }}.tar.gz"
        dest: "{{ easybuild_software_dir }}/easyconfigs"
  - name: Deploy NGS_Automated module with EasyBuild.
    shell: |
           source {{ easybuild_modules_dir }}/modules.bashrc
           module load "EasyBuild/{{ easybuild_eb_version }}"
           eb --robot --robot-paths="{{ pb_ebconfigs_prefix }}/:" \
              {{ pb_ebconfigs_prefix }}/n/NGS_Automated/NGS_Automated-{{ pb_ngs_automated_version }}.eb
    environment:
      SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
...
