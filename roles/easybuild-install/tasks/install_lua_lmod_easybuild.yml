---
#
# Lua.
#
- name: Download Lua.
  get_url:
    url: "http://sourceforge.net/projects/lmod/files/lua-{{ easybuild_lua_version }}.tar.bz2/download"
    dest: "{{ easybuild_sources_dir }}/l/Lua/lua-{{ easybuild_lua_version }}.tar.bz2"
    mode: "{{ MODE_0664_HARD }}"
    checksum: 'md5:a8d0443fe79fc4e9aaded057d81304cd' # 5.1.4.9
    timeout: 60
    validate_certs: no # Sourceforge redirects to https and this fails when Python on the target host is version <= 2.6.6.
- name: Decompress Lua.
  unarchive:
    src:  "{{ easybuild_sources_dir }}/l/Lua/lua-{{ easybuild_lua_version }}.tar.bz2"
    dest: "{{ easybuild_sources_dir }}/l/Lua/"
    copy: no
    mode: "{{ MODE__775_SOFT }}"
- name: Compile and install Lua
  shell: |
         cd {{ easybuild_sources_dir }}/l/Lua/lua-{{ easybuild_lua_version }}
         umask 0002
         ./configure --with-static=yes \
                     --prefix={{ easybuild_software_dir }}/Lua/{{ easybuild_lua_version }} \
             && make install

#
# Lmod.
#
- name: Download Lmod.
  get_url:
    url: "https://github.com/TACC/Lmod/archive/{{ easybuild_lmod_version }}.tar.gz"
    dest: "{{ easybuild_sources_dir }}/l/Lmod/{{ easybuild_lmod_version }}.tar.gz"
    checksum: 'md5:a2ea3c83f08d4175f08f84ac2a9bd508'
    mode: "{{ MODE_0664_HARD }}"
- name: Decompress Lmod.
  unarchive:
    src:  "{{ easybuild_sources_dir }}/l/Lmod/{{ easybuild_lmod_version }}.tar.gz"
    dest: "{{ easybuild_sources_dir }}/l/Lmod/"
    copy: no
    mode: "{{ MODE__775_SOFT }}"
- name: Compile and install Lmod.
  shell: |
         export PATH={{ easybuild_software_dir }}/Lua/{{ easybuild_lua_version }}/bin:$PATH
         cd {{ easybuild_sources_dir }}/l/Lmod/Lmod-{{ easybuild_lmod_version }}
         umask 0002
         ./configure --prefix={{ easybuild_software_dir }} \
                     --with-lua-include={{ easybuild_software_dir }}/Lua/{{ easybuild_lua_version }}/include \
                     --with-mpathSearch=YES \
                     --with-caseIndependentSorting=YES \
             && make install

#
# EasyBuild.
#
- name: Download EasyBuild bootstrap script and deps for offline bootstrapping.
  get_url: url="{{ item.url }}" dest="{{ item.dest }}" checksum="{{ item.checksum }}" mode="{{ MODE_0664_HARD }}"
  with_items:
    - url: "https://raw.githubusercontent.com/easybuilders/easybuild-framework/{{ easybuild_bs_hash }}/easybuild/scripts/bootstrap_eb.py"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/bootstrap_eb_{{ easybuild_bs_version }}.py"
      checksum: "{{ easybuild_bs_checksum }}"
    - url: "{{ easybuild_vsc_install_url }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: "{{ easybuild_vsc_install_checksum }}"
    - url: "{{ easybuild_vsc_base_url }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: "{{ easybuild_vsc_base_checksum }}"
    - url: "{{ easybuild_framework_url }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: "{{ easybuild_framework_checksum }}"
    - url: "{{ easybuild_easyblocks_url }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: "{{ easybuild_easyblocks_checksum }}"
    - url: "{{ easybuild_easyconfigs_url }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: "{{ easybuild_easyconfigs_checksum }}"
- name: Install latest EasyBuild version with bootstrap script.
  #
  # Ansible doesn't run task in a login shell, so we have to source the EasyBuild config manually.
  #
  shell: |
         source ~/.modulesrc
         umask 0002
         export EASYBUILD_BOOTSTRAP_SOURCEPATH="{{ easybuild_sources_dir }}/e/EasyBuild/"
         python {{ easybuild_sources_dir }}/e/EasyBuild/bootstrap_eb_{{ easybuild_bs_version }}.py {{ HPC_ENV_PREFIX }}
- name: Check if the required EasyBuild version is installed.
  shell: |
         source ~/.modulesrc >/dev/null 2>&1
         module load EasyBuild/{{ easybuild_eb_version }}
         eb --version 2>&1 | head -1 | sed 's|^This is EasyBuild \([0-9\.]*\).*$|\1|'
  args:
    executable: /bin/bash
    warn: no
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  changed_when: false
  failed_when: false
  check_mode: no
  register: eb_installed_version
- name: Determine if the required EasyBuild version needs to be installed.
  set_fact:
    eb_install_from_source: true
  when: 'eb_installed_version|failed or (eb_installed_version.stdout | version_compare(easybuild_eb_version, operator="!="))'
- name: Report EasyBuild status.
  debug:
    msg: 'Will install the required EasyBuild version with the latest EasyBuild version as the bootstrapped version is not the requested version. (Detected {{ eb_installed_version.stdout }} and need {{ easybuild_eb_version }}.)'
  when: eb_install_from_source|default(false)
- name: Install required EasyBuild version with EasyBuild.
  shell: |
         source ~/.modulesrc
         umask 0002
         module load EasyBuild
         eb --software="EasyBuild,{{ easybuild_eb_version }}"
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  when: eb_install_from_source|default(false)
...
