---
#
# EasyBuild.
#
- name: Download EasyBuild bootstrap script and deps for offline bootstrapping.
  get_url: url="{{ item.url }}" dest="{{ item.dest }}" checksum="{{ item.checksum }}" mode="{{ MODE_0664_HARD }}"
  with_items:
    - url: "{{ easybuild_releases[easybuild_version]['bootstrap_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/bootstrap_eb_{{ easybuild_releases[easybuild_version]['bootstrap_version'] }}.py"
      checksum: "{{ easybuild_releases[easybuild_version]['bootstrap_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['vsc_install_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['vsc_install_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['vsc_base_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['vsc_base_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['framework_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['framework_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['easyblocks_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['easyblocks_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['easyconfigs_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['easyconfigs_checksum'] }}"

- name: Install latest EasyBuild version with bootstrap script.
  #
  # Ansible doesn't run task in a login shell, so we have to source the EasyBuild config manually.
  #
  shell: |
         source {{ easybuild_modules_dir }}/modules.bashrc
         umask 0002
         export EASYBUILD_BOOTSTRAP_SOURCEPATH="{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
         python {{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/bootstrap_eb_{{ easybuild_releases[easybuild_version]['bootstrap_version'] }}.py "{{ HPC_ENV_PREFIX }}"
  args:
    executable: /bin/bash
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.

- name: Check if the required EasyBuild version is installed.
  shell: |
         source {{ easybuild_modules_dir }}/modules.bashrc >/dev/null 2>&1
         module load EasyBuild/{{ easybuild_version }}
         eb --version 2>&1 | head -1 | sed 's|^This is EasyBuild \([0-9\.]*\).*$|\1|'
  args:
    executable: /bin/bash
    warn: no
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  changed_when: false
  failed_when: false
  check_mode: no
  register: eb_installed_version

- name: Determine if the required EasyBuild version needs to be installed.
  set_fact:
    eb_install_from_source: true
  when: 'eb_installed_version is failed or eb_installed_version.stdout != easybuild_version'

- name: Report EasyBuild status.
  debug:
    msg: 'Will install the required EasyBuild version with the latest EasyBuild version as the bootstrapped version is not the requested version. (Detected {{ eb_installed_version.stdout }} and need {{ easybuild_version }}.)'
  when: eb_install_from_source|default(false)

- name: Install required EasyBuild version with EasyBuild.
  shell: |
         source {{ easybuild_modules_dir }}/modules.bashrc
         umask 0002
         module load EasyBuild
         eb --software="EasyBuild,{{ easybuild_version }}"
  args:
    executable: /bin/bash
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  when: eb_install_from_source|default(false)
...
