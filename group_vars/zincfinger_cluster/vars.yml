---
#
# Site specific values to override defaults for variables.
#
# Conventions for global environment variables:
# Use UPPERCASE underscore separated names like for shell env vars.
#
# Conventions for playbook variables:
# Use lowercase underscore separated names.
#

#
# Versions of components of our HPC environment, which is managed using Lua+Lmod+EasyBuild.
# NOTE: when introducing a new version number here,
#       please make sure to add corresponding values in group_vars/all.yml
#
lua_version: '5.1.4.9'
lmod_version: '7.8.8'
easybuild_version: '4.3.2'
extra_easyconfigs_version: '2.8.53'
#
# Group folder structures to construct on shared storage systems.
#
group_subfolder_structure: [
  { group: 'umcg-atd',
    lfs: 'tmp05',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-atd-ateambot',
    subfolders: ['concordance', 'generatedscripts', 'logs', 'projects', 'rawdata', 'Samplesheets', 'tmp', 'trendanalysis'] },
  { group: 'umcg-gap',
    lfs: 'tmp05',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gap-ateambot',
    subfolders: ['DiagnosticOutput', 'generatedscripts', 'logs', 'projects', 'rawdata', 'Samplesheets', 'tmp'] },
  { group: 'umcg-gd',
    lfs: 'tmp05',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gd-ateambot',
    subfolders: ['concordance', 'generatedscripts', 'logs', 'projects', 'rawdata', 'Samplesheets', 'tmp', 'trendanalysis'] },
  { group: 'umcg-genomescan',
    lfs: 'tmp05',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-genomescan-ateambot',
    subfolders: ['logs', 'rawdata', 'runs', 'Samplesheets'] },
  { group: 'umcg-gsad',
    lfs: 'tmp05',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gsad-ateambot',
    subfolders: ['concordance', 'DiagnosticOutput', 'generatedscripts', 'logs', 'projects', 'rawdata', 'Samplesheets', 'tmp'] },
  { group: 'umcg-gst',
    lfs: 'tmp05',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gst-ateambot',
    subfolders: ['logs', 'rawdata', 'runs', 'Samplesheets'] },
]
#
# Cron jobs for functional accounts.
#
group_module_versions:
  umcg-atd:
    NGS_Automated: 3.8.0
    NGS_DNA: 3.7.0
    ConcordanceCheck: 2.1.0
  umcg-gd:
    NGS_Automated: 3.8.0
    NGS_DNA: 3.7.0
    ConcordanceCheck: 2.1.0
  umcg-gsad:
    NGS_Automated: 3.8.0
    GAP: 2.5.0
  umcg-gap:
    NGS_Automated: 3.8.0
    GAP: 2.5.0
  umcg-gst:
    NGS_Automated: 3.8.0
  umcg-genomescan:
    NGS_Automated: 3.8.0
  umcg-labgnkbh:
    NGS_Automated: 3.4.0
  umcg-patho:
    NGS_Automated: 3.4.0
crontabs:
  ######################################################################################################################
  # umcg-atd group
  ######################################################################################################################
  - name: benikdown  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/benikdown.sh"
  - name: FileSystemCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: 0
    hour: 6
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/FileSystemCheckGD.sh"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-atd -e"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-atd"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-NGS_DNA-{{ group_module_versions['umcg-atd']['NGS_DNA'] }};
         startPipeline.sh -g umcg-atd"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-atd"
  - name: NGS_Automated_pipelineTiming  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/30'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         pipelineTiming.sh -g umcg-atd -s gattaca02.gcc.rug.nl -r /groups/umcg-atd/scr01/"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-atd -e"
  - name: NGS_Automated_copyRawDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-atd -s gattaca02.gcc.rug.nl"
    disabled: true  # All inhouse sequenced samples from both gattaca01 and gattaca02 currently processed on Leucine-Zipper.
  - name: NGS_Automated_copyRawDataToPrm_genomescan  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -a -g umcg-atd -s zinc-finger -r /groups/umcg-gst/tmp05;
         copySamplesheetsForBatchToPrm.sh -g umcg-atd -s zinc-finger -r /groups/umcg-gst/tmp05"
  - name: NGS_Automated_copyRawDataToPrmTiming  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyRawDataToPrmTiming.sh -g umcg-atd -s gattaca02.gcc.rug.nl -r /groups/umcg-atd/scr01/"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-atd"
  - name: NGS_DNA_GavinSA  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_DNA/{{ group_module_versions['umcg-atd']['NGS_DNA'] }};
         GavinSA.sh -g umcg-atd -t tmp05"
  - name: NGS_DNA_GavinSA_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    # ToDo: improve job with "module load" and remove "sh"
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         sh /groups/umcg-gd/tmp05/GavinStandAlone/cleanup.sh umcg-atd"
  - name: ConcordanceCheck_ParseDarwinSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         ParseDarwinSamplesheet.sh -g umcg-atd -a umcg-gsad"
  - name: ConcordanceCheck_ConcordanceCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         ConcordanceCheck.sh -g umcg-atd"
  - name: ConcordanceCheck_copyConcordanceCheckData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         copyConcordanceCheckData.sh -g umcg-atd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-atd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-atd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-atd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-atd"
  ######################################################################################################################
  # umcg-gd group
  ######################################################################################################################
  - name: benikdown  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/benikdown.sh"
  - name: FileSystemCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: 0
    hour: 6
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/FileSystemCheckGD.sh"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gd -e"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gd"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-NGS_DNA-{{ group_module_versions['umcg-gd']['NGS_DNA'] }};
         startPipeline.sh -g umcg-gd"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-gd"
  - name: NGS_Automated_pipelineTiming  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/30'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         pipelineTiming.sh -g umcg-gd -s gattaca02.gcc.rug.nl -r /groups/umcg-gd/scr01/"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gd -e"
  - name: NGS_Automated_copyRawDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-gd -s gattaca02.gcc.rug.nl"
    disabled: true  # All inhouse sequenced samples from both gattaca01 and gattaca02 currently processed on Leucine-Zipper.
  - name: NGS_Automated_copyRawDataToPrm_genomescan  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -a -g umcg-gd -s zinc-finger -r /groups/umcg-genomescan/tmp05;
         copySamplesheetsForBatchToPrm.sh -g umcg-gd -s zinc-finger -r /groups/umcg-genomescan/tmp05"
  - name: NGS_Automated_copyRawDataToPrmTiming  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyRawDataToPrmTiming.sh -g umcg-gd -s gattaca02.gcc.rug.nl -r /groups/umcg-gd/scr01/"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-gd"
  - name: NGS_DNA_GavinSA  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_DNA/{{ group_module_versions['umcg-gd']['NGS_DNA'] }};
         GavinSA.sh -g umcg-gd -t tmp05"
  - name: GavinSA_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    # ToDo: improve job with "module load" and remove "sh"
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         sh /groups/umcg-gd/tmp05/GavinStandAlone/cleanup.sh umcg-gd"
  - name: ConcordanceCheck_ParseDarwinSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         ParseDarwinSamplesheet.sh -g umcg-gd -a umcg-gap"
  - name: ConcordanceCheck_ConcordanceCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         ConcordanceCheck.sh -g umcg-gd"
  - name: ConcordanceCheck_copyConcordanceCheckData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         copyConcordanceCheckData.sh -g umcg-gd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-gd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-gd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-gd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-gd"
  ######################################################################################################################
  # umcg-gsad group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gsad -e"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-GAP-{{ group_module_versions['umcg-gsad']['GAP'] }};
         startPipeline.sh -g umcg-gsad"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-gsad"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gsad"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gsad -e"
  - name: NGS_Automated_copyRawDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-gsad -s gattaca02.gcc.rug.nl"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-gsad"
  ######################################################################################################################
  # umcg-gap group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gap -e"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-GAP-{{ group_module_versions['umcg-gap']['GAP'] }};
         startPipeline.sh -g umcg-gap"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-gap"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gap"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gap -e"
  - name: NGS_Automated_copyRawDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-gap -s gattaca02.gcc.rug.nl"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-gap"
  ######################################################################################################################
  # umcg-gst group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) + groups['data_staging'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gst -e"
  - name: NGS_Automated_pullRawDataFromDS  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['data_staging'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         pullRawDataFromDS.sh -g umcg-gst"
  - name: NGS_Automated_processGsRawData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         processGsRawData.sh -g umcg-gst"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gst"
  ######################################################################################################################
  # umcg-genomescan group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['helper'] | default([]) + groups['user_interface'] | default([]) + groups['data_staging'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-genomescan -e"
  - name: NGS_Automated_pullRawDataFromDS  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['data_staging'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         pullRawDataFromDS.sh -g umcg-genomescan"
  - name: NGS_Automated_processGsRawData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         processGsRawData.sh -g umcg-genomescan"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-genomescan"
  ######################################################################################################################
  # umcg-labgnkbh group
  ######################################################################################################################
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-labgnkbh"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-labgnkbh -e"
  - name: NGS_Automated_copyRawDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-labgnkbh -s gattaca02.gcc.rug.nl"
    disabled: true  # All inhouse sequenced samples from both gattaca01 and gattaca02 currently processed on Leucine-Zipper.
  ######################################################################################################################
  # umcg-patho group
  ######################################################################################################################
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-ateambot
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-patho']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-patho"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-patho']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-patho -e"
  - name: NGS_Automated_copyBclDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-dm
    machines: "{{ groups['helper'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-patho']['NGS_Automated'] }}-bare;
         copyBclDataToPrm.sh -g umcg-patho -s gattaca02.gcc.rug.nl"
    disabled: true  # All inhouse sequenced samples from both gattaca01 and gattaca02 currently processed on Leucine-Zipper.
#
# Sources, software and reference data to install/fetch.
#
public_sources: [
  'f/flex/flex-2.5.39.tar.gz',
  'g/GCC/gmp-6.0.0a.tar.bz2',
  'g/GCC/mpc-1.0.2.tar.gz',
  'g/GCC/gcc-4.9.3.tar.bz2',
  'g/GCC/mpfr-3.1.2.tar.gz',
  'h/hwloc/hwloc-1.11.0.tar.gz',
  'n/NASM/nasm-2.11.08.tar.bz2',
  'n/numactl/numactl-2.0.10.tar.gz',
  'o/OpenMPI/openmpi-1.8.8.tar.gz',
  'z/zlib/zlib-1.2.8.tar.gz',
  's/snpEff/snpEff_v4_3_core.zip',
  'i/io_lib/io_lib-1.14.6.tar.gz',
  'e/expat/expat-2.1.0.tar.gz',
  'l/libpng/libpng-1.6.21.tar.gz',
]
private_sources: [
  'g/GATK/GenomeAnalysisTK-3.7.tar.bz2',
  'j/Java/jdk-7u80-linux-x64.tar.gz',
  'j/Java/jdk-8u45-linux-x64.tar.gz',
  'j/Java/jdk-8u74-linux-x64.tar.gz',
  'j/Java/jdk-11.0.2-linux-x64_bin.tar.gz',
]
refdata: [
  'dbSNP',
  '1000G',
  'Agilent',
  'CADD',
  'CGD',
  'ClinVar',
  'Controls_Convading_XHMM',
  'GRC/Hg19toHumanG1kV37.chain',
  'GSAarray',
  'Ensembl',
  'ExAC',
  'ManVarList',
#  'gnomAD',
  'GAVIN',
  'GeneNetwork',
  'HPO',
  'UMCG',
  'XHMM',
  'gonl',
  'inSilico',
  'snpEff-4.3',
]
dynamic_easyconfigs: >-
  {%- set easyconfigs_for_group_modules = [] %}
  {%- for group, modules in group_module_versions.items() %}
    {%- for software, version in modules.items() %}
      {%- if software == 'NGS_Automated' %}
        {%- set easyconfigs_for_group_modules = easyconfigs_for_group_modules.append(
              'n/NGS_Automated/NGS_Automated-' + version + '-bare.eb'
            ) %}
      {%- elif software == 'NGS_DNA' or software == 'GAP' %}
        {%- set easyconfigs_for_group_modules = easyconfigs_for_group_modules.append(
              'n/NGS_Automated/NGS_Automated-' + group_module_versions[group]['NGS_Automated'] + '-' + software + '-' + version + '.eb'
            ) %}
      {%- else %}
        {%- set easyconfigs_for_group_modules = easyconfigs_for_group_modules.append(
              software[0:1] | lower + '/' + software + '/' + software + '-' + version + '.eb'
            ) %}
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
  {{- easyconfigs_for_group_modules | default([]) -}}
static_easyconfigs:
  - c/cluster-utils/cluster-utils-v18.08.1.eb
  - d/depad-utils/depad-utils-v19.02.1.eb
all_easyconfigs: "{{ dynamic_easyconfigs | default([]) | union(static_easyconfigs | default([])) }}"
easyconfigs: "{{ all_easyconfigs }}"
helper_only_easyconfigs: "{{ all_easyconfigs | select('search', 'NGS_Automated-.*-bare.eb') | list }}"
...
