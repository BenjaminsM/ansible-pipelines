---
#
# Site specific values to override defaults for variables.
#
# Conventions for global environment variables:
# Use UPPERCASE underscore separated names like for shell env vars.
#
# Conventions for playbook variables:
# Use lowercase underscore separated names.
#
stack_prefix: 'wh'
#
# Versions of components of our HPC environment, which is managed using Lua+Lmod+EasyBuild.
# NOTE: when introducing a new version number here,
#       please make sure to add corresponding values in group_vars/all.yml
#
lua_version: '5.1.4.9'
lmod_version: '8.6.2'
easybuild_version: '4.6.2'
extra_easyconfigs_version: 2.8.54
extra_easyconfigs_repository: 'easybuild-easyconfigs'
#
# Group folder structures to construct on shared storage systems.
#
group_subfolder_structure: [
  { group: 'umcg-atd',
    lfs: 'tmp07',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-atd-ateambot',
    subfolders: ['concordance/array', 'concordance/jobs','concordance/logs','concordance/ngs','concordance/results', 'concordance/samplesheets','concordance/tmp', 'generatedscripts', 'logs', 'projects', 'rawdata/ngs', 'Samplesheets/new', 'tmp', 'trendanalysis'],
    machines: "{{ groups['user_interface'] }}" },
  { group: 'umcg-atd',
    lfs: 'dat07',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-atd-dm',
    subfolders: ['ConcordanceCheckOutput','ConcordanceCheckSamplesheets/archive', 'logs', 'samplesheets', 'temp', 'trendanalysis'],
    machines: "{{ groups['chaperone'] }}" },
  { group: 'umcg-atd',
    lfs: 'prm07',
    mode: "{{ MODE_2750_HARD }}",
    owner: 'umcg-atd-dm',
    subfolders: ['concordance', 'logs', 'projects', 'Samplesheets/archive', 'rawdata/ngs', 'trendanalysis'],
    machines: "{{ groups['chaperone'] }}" },

#
# Disabled production groups, which do not yet exist on Winged Helix during testing phase.
#
#   { group: 'umcg-gap',
#     lfs: 'tmp07',
#     mode: "{{ MODE_2770_HARD }}",
#     owner: 'umcg-gap-ateambot',
#     subfolders: ['DiagnosticOutput', 'generatedscripts', 'generatedscripts_array', 'logs', 'projects', 'rawdata', 'runs_array', 'Samplesheets/new', 'tmp'],
#     machines: "{{ groups['user_interface'] }}" },
#   { group: 'umcg-gap',
#     lfs: 'dat07',
#     mode: "{{ MODE_2770_HARD }}",
#     owner: 'umcg-gap-dm',
#     subfolders: ['DiagnosticOutput','logs','samplesheets'],
#     machines: "{{ groups['chaperone'] }}" },
#   { group: 'umcg-gap',
#     lfs: 'prm07',
#     mode: "{{ MODE_2750_HARD }}",
#     owner: 'umcg-gap-dm',
#     subfolders: ['concordance/array', 'logs', 'rawdata/array/IDAT','rawdata/array/GTC', 'runs', 'Samplesheets/archive'],
#     machines: "{{ groups['chaperone'] }}" },
#   { group: 'umcg-gd',
#     lfs: 'tmp07',
#     mode: "{{ MODE_2770_HARD }}",
#     owner: 'umcg-gd-ateambot',
#     subfolders: ['concordance/samplesheets', 'generatedscripts', 'logs', 'projects', 'rawdata', 'Samplesheets/new', 'tmp', 'trendanalysis'],
#     machines: "{{ groups['user_interface'] }}" },
#   { group: 'umcg-gd',
#     lfs: 'dat07',
#     mode: "{{ MODE_2770_HARD }}",
#     owner: 'umcg-gd-dm',
#     subfolders: ['ConcordanceCheckOutput','ConcordanceCheckSamplesheets/archive', 'logs', 'samplesheets', 'temp', 'trendanalysis'],
#     machines: "{{ groups['chaperone'] }}" },
#   { group: 'umcg-gd',
#     lfs: 'prm07',
#     mode: "{{ MODE_2750_HARD }}",
#     owner: 'umcg-gd-dm',
#     subfolders: ['concordance', 'logs', 'projects', 'Samplesheets/archive', 'rawdata/ngs', 'trendanalysis'],
#     machines: "{{ groups['chaperone'] }}" },
#   { group: 'umcg-genomescan',
#     lfs: 'tmp07',
#     mode: "{{ MODE_2770_HARD }}",
#     owner: 'umcg-genomescan-ateambot',
#     subfolders: ['logs', 'rawdata', 'runs', 'Samplesheets'],
#     machines: "{{ groups['user_interface'] }}" },
  { group: 'umcg-gsad',
    lfs: 'tmp07',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gsad-ateambot',
    subfolders: ['DiagnosticOutput', 'generatedscripts', 'generatedscripts_array', 'logs', 'projects', 'rawdata/array/IDAT','rawdata/array/GTC', 'runs_array', 'Samplesheets', 'tmp'],
    machines: "{{ groups['user_interface'] }}" },
  { group: 'umcg-gsad',
    lfs: 'dat07',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gsad-dm',
    subfolders: ['DiagnosticOutput','logs','samplesheets'],
    machines: "{{ groups['chaperone'] }}" },
  { group: 'umcg-gsad',
    lfs: 'prm07',
    mode: "{{ MODE_2750_HARD }}",
    owner: 'umcg-gsad-dm',
    subfolders: ['concordance/array', 'logs', 'rawdata/array/IDAT','rawdata/array/GTC', 'runs', 'Samplesheets/archive'],
    machines: "{{ groups['chaperone'] }}" },
  { group: 'umcg-gst',
    lfs: 'tmp07',
    mode: "{{ MODE_2770_HARD }}",
    owner: 'umcg-gst-ateambot',
    subfolders: ['logs', 'rawdata', 'runs', 'Samplesheets'],
    machines: "{{ groups['user_interface'] }}" },
]
#
# Cron jobs for functional accounts.
#
group_module_versions:
  umcg-atd:
    NGS_Automated: beta
    NGS_DNA: 3.7.0
    ConcordanceCheck: 2.1.0
    ngs-utils: 22.01.1
    NGS_Demultiplexing: 2.5.1
  umcg-gd:
    NGS_Automated: 3.7.1
    NGS_DNA: 3.6.0
    ConcordanceCheck: 2.1.0
    ngs-utils: 22.01.1
    NGS_Demultiplexing: 2.5.1
  umcg-gsad:
    NGS_Automated: 3.8.0
    GAP: 2.5.0
    AGCT: beta
    ngs-utils: 22.01.1
  umcg-gap:
    NGS_Automated: 3.6.3
    GAP: 2.3.1
    AGCT: 1.1.0
    ngs-utils: 22.01.1
  umcg-gst:
    NGS_Automated: 3.8.0
    ngs-utils: 22.01.1
  umcg-genomescan:
    NGS_Automated: 3.6.2
    ngs-utils: 22.01.1
  umcg-labgnkbh:
    NGS_Automated: 3.4.0
    ngs-utils: 22.01.1
    NGS_Demultiplexing: 2.5.1
  umcg-patho:
    NGS_Automated: 3.4.0
    ngs-utils: 22.01.1
crontabs:
  ######################################################################################################################
  # umcg-atd group
  ######################################################################################################################
  - name: benikdown  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/benikdown.sh"
  - name: ngs-utils_checkSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ngs-utils/{{ group_module_versions['umcg-atd']['ngs-utils'] }};
         checkSamplesheet.sh -s /groups/umcg-atd/tmp07/"
  - name: NGS_Demultiplexing_demultiplexing  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-NGS_Demultiplexing-{{ group_module_versions['umcg-atd']['NGS_Demultiplexing'] }};
         demultiplexing.sh -g umcg-atd"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-atd -e"
  - name: FileSystemCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: 0
    hour: 6
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/FileSystemCheckGD.sh"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-atd -e"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-atd"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-NGS_DNA-{{ group_module_versions['umcg-atd']['NGS_DNA'] }};
         startPipeline.sh -g umcg-atd"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-atd"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-atd -e"
  - name: NGS_Automated_copyRawDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-atd -s porch+wingedhelix"
  - name: NGS_Automated_copyRawDataToPrm_genomescan  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -a -g umcg-atd -s porch+wingedhelix -r /groups/umcg-gst/tmp07;
         copySamplesheetsForBatchToPrm.sh -g umcg-atd -s porch+wingedhelix -r /groups/umcg-gst/tmp07"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-atd']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-atd"
  - name: NGS_DNA_GavinSA  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_DNA/{{ group_module_versions['umcg-atd']['NGS_DNA'] }};
         GavinSA.sh -g umcg-atd -t tmp07"
  - name: NGS_DNA_GavinSA_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    # ToDo: improve job with "module load" and remove "sh"
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         sh /groups/umcg-gd/tmp07/GavinStandAlone/cleanup.sh umcg-atd"
  - name: ConcordanceCheck_ParseDarwinSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         ParseDarwinSamplesheet.sh -g umcg-atd -a umcg-gsad"
  - name: ConcordanceCheck_ConcordanceCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         ConcordanceCheck.sh -g umcg-atd"
  - name: ConcordanceCheck_copyConcordanceCheckData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         copyConcordanceCheckData.sh -g umcg-atd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-atd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-atd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-atd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-atd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-atd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-atd"
  ######################################################################################################################
  # umcg-gd group
  ######################################################################################################################
  - name: benikdown  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/benikdown.sh"
  - name: FileSystemCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: 0
    disabled: true
    hour: 6
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         ${HOME}/FileSystemCheckGD.sh"
  - name: ngs-utils_checkSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ngs-utils/{{ group_module_versions['umcg-gd']['ngs-utils'] }};
         checkSamplesheet.sh -s /groups/umcg-gd/tmp07/"
  - name: NGS_Demultiplexing_demultiplexing  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-NGS_Demultiplexing-{{ group_module_versions['umcg-gd']['NGS_Demultiplexing'] }};
         demultiplexing.sh -g umcg-gd"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gd -e"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gd"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-NGS_DNA-{{ group_module_versions['umcg-gd']['NGS_DNA'] }};
         startPipeline.sh -g umcg-gd"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-gd"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gd -e"
  - name: NGS_Automated_copyRawDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-gd -s porch+wingedhelix"
  - name: NGS_Automated_copyRawDataToPrm_genomescan  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -a -g umcg-gd -s porch+wingedhelix -r /groups/umcg-genomescan/tmp07;
         copySamplesheetsForBatchToPrm.sh -g umcg-gd -s porch+wingedhelix -r /groups/umcg-genomescan/tmp07"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gd']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-gd"
  - name: NGS_DNA_GavinSA  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_DNA/{{ group_module_versions['umcg-gd']['NGS_DNA'] }};
         GavinSA.sh -g umcg-gd -t tmp07"
  - name: GavinSA_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    # ToDo: improve job with "module load" and remove "sh"
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         sh /groups/umcg-gd/tmp07/GavinStandAlone/cleanup.sh umcg-gd"
  - name: ConcordanceCheck_ParseDarwinSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         ParseDarwinSamplesheet.sh -g umcg-gd -a umcg-gap"
  - name: ConcordanceCheck_ConcordanceCheck  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         ConcordanceCheck.sh -g umcg-gd"
  - name: ConcordanceCheck_copyConcordanceCheckData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         copyConcordanceCheckData.sh -g umcg-gd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-gd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-gd"
  - name: ConcordanceCheck_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         notifications.sh -g umcg-gd -e"
  - name: ConcordanceCheck_cleanup  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gd-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ConcordanceCheck/{{ group_module_versions['umcg-gd']['ConcordanceCheck'] }};
         cleanup.sh -g umcg-gd"
  ######################################################################################################################
  # umcg-gsad group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gsad -e"
  - name: GAP_checkSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load GAP/{{ group_module_versions['umcg-gsad']['GAP'] }};
         checkSamplesheetWrapper.sh"
  - name: AGCT_arrayConversion  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-AGCT-{{ group_module_versions['umcg-gsad']['AGCT'] }};
         arrayConversion.sh -g umcg-gsad"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-GAP-{{ group_module_versions['umcg-gsad']['GAP'] }};
         startPipeline.sh -g umcg-gsad"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-gsad"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gsad"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gsad -e"
  - name: NGS_Automated_copyRawDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-gsad -s porch+wingedhelix"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gsad-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gsad']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-gsad"
  ######################################################################################################################
  # umcg-gap group
  ######################################################################################################################
  - name: GAP_checkSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load GAP/{{ group_module_versions['umcg-gap']['GAP'] }};
         checkSamplesheetWrapper.sh"
  - name: AGCT_arrayConversion  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-AGCT-{{ group_module_versions['umcg-gap']['AGCT'] }};
         arrayConversion.sh -g umcg-gap"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gap -e"
  - name: NGS_Automated_startPipeline  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-GAP-{{ group_module_versions['umcg-gap']['GAP'] }};
         startPipeline.sh -g umcg-gap"
  - name: NGS_Automated_calculateProjectMd5s  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         calculateProjectMd5s.sh -g umcg-gap"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gap"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gap -e"
  - name: NGS_Automated_copyRawDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-gap -s porch+wingedhelix"
  - name: NGS_Automated_copyProjectDataToPrm  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gap-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gap']['NGS_Automated'] }}-bare;
         copyProjectDataToPrm.sh -g umcg-gap"
  ######################################################################################################################
  # umcg-gst group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-gst -e"
  - name: NGS_Automated_pullRawDataFromDS  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         pullRawDataFromDS.sh -g umcg-gst"
  - name: NGS_Automated_processGsRawData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         processGsRawData.sh -g umcg-gst"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-gst-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-gst']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-gst"
  ######################################################################################################################
  # umcg-genomescan group
  ######################################################################################################################
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['chaperone'] | default([]) + groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-genomescan -e"
  - name: NGS_Automated_pullRawDataFromDS  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         pullRawDataFromDS.sh -g umcg-genomescan"
  - name: NGS_Automated_processGsRawData  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         processGsRawData.sh -g umcg-genomescan"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-genomescan-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-genomescan']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-genomescan"
  ######################################################################################################################
  # umcg-labgnkbh group
  ######################################################################################################################
  - name: ngs-utils_checkSamplesheet  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load ngs-utils/{{ group_module_versions['umcg-labgnkbh']['ngs-utils'] }};
         checkSamplesheet.sh -s /groups/umcg-labgnkbh/tmp07/"
  - name: NGS_Demultiplexing_demultiplexing  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-ateambot
    machines: "{{ groups['user_interface'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-NGS_Demultiplexing-{{ group_module_versions['umcg-labgnkbh']['NGS_Demultiplexing'] }};
         demultiplexing.sh -g umcg-labgnkbh"
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-labgnkbh"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-labgnkbh -e"
  - name: NGS_Automated_copyRawDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-labgnkbh-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-labgnkbh']['NGS_Automated'] }}-bare;
         copyRawDataToPrm.sh -g umcg-labgnkbh -s porch+wingedhelix"
  ######################################################################################################################
  # umcg-patho group
  ######################################################################################################################
  - name: NGS_Automated_moveSamplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-ateambot
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-patho']['NGS_Automated'] }}-bare;
         moveSamplesheets.sh -g umcg-patho"
  - name: NGS_Automated_notifications  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-patho']['NGS_Automated'] }}-bare;
         notifications.sh -g umcg-patho -e"
  - name: NGS_Automated_copyBclDataToPrm_inhouse  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-dm
    machines: "{{ groups['chaperone'] | default([]) }}"
    minute: '*/10'
    disabled: true
    job: /bin/bash -c "{{ configure_env_in_cronjob }};
         module load NGS_Automated/{{ group_module_versions['umcg-patho']['NGS_Automated'] }}-bare;
         copyBclDataToPrm.sh -g umcg-patho -s porch+wingedhelix"
  - name: move samplesheets  # Unique ID required to update existing cronjob: do not modify.
    user: umcg-patho-ateambot
    machines: "{{ groups['convertor'] | default([]) }}"
    minute: '*/5'
    disabled: true
    job: /bin/bash -c "/bin/mv -v "/groups/umcg-patho/tmp07/Samplesheets/new/"*".csv" "/groups/umcg-patho/tmp07/Samplesheets/""
#
# Sources, software and reference data to install/fetch.
#
public_sources: [
  'g/GCCcore/isl-0.19.tar.bz2',
  'l/libtool/libtool-2.4.6.tar.gz',
  'l/LibTIFF/tiff-4.0.10.tar.gz',
]
private_sources: []
refdata: [
  'GRC/Hg19toHumanG1kV37.chain',
  'dbSNP',
  '1000G',
  'Agilent',
  'CGD',
  'ClinVar',
  'Controls_Convading_XHMM',
  'GSAarray',
  'Ensembl',
  'ExAC',
  'ManVarList',
  'gnomAD/release-170228',
  'GAVIN',
  'UMCG',
  'gonl',
  'inSilico',
  'snpEff-4.3',
]
dynamic_easyconfigs: >-
  {%- set easyconfigs_for_group_modules = [] %}
  {%- for group, modules in group_module_versions.items() %}
    {%- for software, version in modules.items() %}
      {%- if software == 'NGS_Automated' %}
        {%- set easyconfigs_for_group_modules = easyconfigs_for_group_modules.append(
              'n/NGS_Automated/NGS_Automated-' + version + '-bare.eb'
            ) %}
      {%- elif software == 'NGS_DNA' or software == 'GAP' %}
        {%- set easyconfigs_for_group_modules = easyconfigs_for_group_modules.append(
              'n/NGS_Automated/NGS_Automated-' + group_module_versions[group]['NGS_Automated'] + '-' + software + '-' + version + '.eb'
            ) %}
      {%- else %}
        {%- set easyconfigs_for_group_modules = easyconfigs_for_group_modules.append(
              software[0:1] | lower + '/' + software + '/' + software + '-' + version + '.eb'
            ) %}
      {%- endif %}
    {%- endfor %}
  {%- endfor %}
  {{- easyconfigs_for_group_modules | default([]) -}}
static_easyconfigs:
  - c/cluster-utils/cluster-utils-v21.05.1-GCCcore-7.3.0.eb
  - d/depad-utils/depad-utils-v19.10.1.eb
  - n/NGS_DNA/NGS_DNA-4.0.5-foss-2018b.eb
all_easyconfigs: "{{ dynamic_easyconfigs | default([]) | union(static_easyconfigs | default([])) }}"
easyconfigs: "{{ all_easyconfigs }}"
chaperone_only_easyconfigs: "{{ all_easyconfigs | select('search', 'NGS_Automated-.*-bare.eb') | list }}"
...
